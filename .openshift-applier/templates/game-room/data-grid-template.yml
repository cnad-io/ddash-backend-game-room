apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: datagrid73-mysql-persistent
metadata:
  name: datagrid73-mysql-persistent
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's HTTP port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql", "kind": "Service"}]'
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      ports:
        - port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's HTTPS port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql", "kind": "Service"}]'
      labels:
        application: '${APPLICATION_NAME}'
      name: 'secure-${APPLICATION_NAME}'
    spec:
      ports:
        - port: 8443
          targetPort: 8443
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Memcached service for clustered applications.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql", "kind": "Service"}]'
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-memcached'
    spec:
      ports:
        - port: 11211
          targetPort: 11211
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Hot Rod service for clustered applications.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql", "kind": "Service"}]'
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-hotrod'
    spec:
      ports:
        - port: 11333
          targetPort: 11333
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-mysql'
    spec:
      ports:
        - port: 3306
          targetPort: 3306
      selector:
        deploymentConfig: '${APPLICATION_NAME}-mysql'
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-ping'
    spec:
      clusterIP: None
      ports:
        - name: ping
          port: 8888
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
  - apiVersion: v1
    id: '${APPLICATION_NAME}-http'
    kind: Route
    metadata:
      annotations:
        description: Route for application's HTTP service.
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      host: '${HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}'
  - apiVersion: v1
    id: '${APPLICATION_NAME}-https'
    kind: Route
    metadata:
      annotations:
        description: Route for application's HTTPS service.
      labels:
        application: '${APPLICATION_NAME}'
      name: 'secure-${APPLICATION_NAME}'
    spec:
      host: '${HOSTNAME_HTTPS}'
      tls:
        termination: passthrough
      to:
        name: 'secure-${APPLICATION_NAME}'
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}'
    spec:
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: '${APPLICATION_NAME}'
            deploymentConfig: '${APPLICATION_NAME}'
          name: '${APPLICATION_NAME}'
        spec:
          containers:
            - env:
                - name: USERNAME
                  value: '${USERNAME}'
                - name: PASSWORD
                  value: '${PASSWORD}'
                - name: ADMIN_GROUP
                  value: '${ADMIN_GROUP}'
                - name: HOTROD_AUTHENTICATION
                  value: '${HOTROD_AUTHENTICATION}'
                - name: CONTAINER_SECURITY_ROLE_MAPPER
                  value: '${CONTAINER_SECURITY_ROLE_MAPPER}'
                - name: CONTAINER_SECURITY_ROLES
                  value: '${CONTAINER_SECURITY_ROLES}'
                - name: HTTPS_KEYSTORE_DIR
                  value: /etc/datagrid-secret-volume
                - name: HTTPS_KEYSTORE
                  value: '${HTTPS_KEYSTORE}'
                - name: HTTPS_NAME
                  value: '${HTTPS_NAME}'
                - name: HTTPS_PASSWORD
                  value: '${HTTPS_PASSWORD}'
                - name: DB_SERVICE_PREFIX_MAPPING
                  value: '${APPLICATION_NAME}-mysql=DB'
                - name: DB_JNDI
                  value: '${DB_JNDI}'
                - name: DB_USERNAME
                  value: '${DB_USERNAME}'
                - name: DB_PASSWORD
                  value: '${DB_PASSWORD}'
                - name: DB_DATABASE
                  value: '${DB_DATABASE}'
                - name: TX_DATABASE_PREFIX_MAPPING
                  value: '${APPLICATION_NAME}-mysql=DB'
                - name: DB_MIN_POOL_SIZE
                  value: '${DB_MIN_POOL_SIZE}'
                - name: DB_MAX_POOL_SIZE
                  value: '${DB_MAX_POOL_SIZE}'
                - name: DB_TX_ISOLATION
                  value: '${DB_TX_ISOLATION}'
                - name: DEFAULT_JDBC_STORE_TYPE
                  value: string
                - name: DEFAULT_JDBC_STORE_DATASOURCE
                  value: '${DB_JNDI}'
                - name: MEMCACHED_JDBC_STORE_TYPE
                  value: string
                - name: MEMCACHED_JDBC_STORE_DATASOURCE
                  value: '${DB_JNDI}'
                - name: JGROUPS_PING_PROTOCOL
                  value: openshift.DNS_PING
                - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                  value: '${APPLICATION_NAME}-ping'
                - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                  value: '8888'
                - name: INFINISPAN_CONNECTORS
                  value: '${INFINISPAN_CONNECTORS}'
                - name: CACHE_NAMES
                  value: '${CACHE_NAMES}'
                - name: DATAVIRT_CACHE_NAMES
                  value: '${DATAVIRT_CACHE_NAMES}'
                - name: CACHE_TYPE_DEFAULT
                  value: '${CACHE_TYPE_DEFAULT}'
                - name: ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH
                  value: '${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}'
                - name: HOTROD_SERVICE_NAME
                  value: '${APPLICATION_NAME}-hotrod'
                - name: HOTROD_ENCRYPTION
                  value: '${HTTPS_NAME}'
                - name: MEMCACHED_CACHE
                  value: '${MEMCACHED_CACHE}'
                - name: REST_SECURITY_DOMAIN
                  value: '${REST_SECURITY_DOMAIN}'
                - name: JGROUPS_ENCRYPT_SECRET
                  value: '${JGROUPS_ENCRYPT_SECRET}'
                - name: JGROUPS_ENCRYPT_KEYSTORE
                  value: '${JGROUPS_ENCRYPT_KEYSTORE}'
                - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
                  value: /etc/jgroups-encrypt-secret-volume
                - name: JGROUPS_ENCRYPT_NAME
                  value: '${JGROUPS_ENCRYPT_NAME}'
                - name: JGROUPS_ENCRYPT_PASSWORD
                  value: '${JGROUPS_ENCRYPT_PASSWORD}'
                - name: JGROUPS_CLUSTER_PASSWORD
                  value: '${JGROUPS_CLUSTER_PASSWORD}'
              image: jboss-datagrid73-openshift
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - /bin/bash
                    - '-c'
                    - /opt/datagrid/bin/livenessProbe.sh
                initialDelaySeconds: 60
              name: '${APPLICATION_NAME}'
              ports:
                - containerPort: 8778
                  name: jolokia
                  protocol: TCP
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8443
                  name: https
                  protocol: TCP
                - containerPort: 8888
                  name: ping
                  protocol: TCP
                - containerPort: 11211
                  name: memcached
                  protocol: TCP
                - containerPort: 11222
                  name: hotrod-internal
                  protocol: TCP
                - containerPort: 11333
                  name: hotrod
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - '-c'
                    - /opt/datagrid/bin/readinessProbe.sh
              resources:
                limits:
                  memory: '${MEMORY_LIMIT}'
              volumeMounts:
                - mountPath: /etc/datagrid-secret-volume
                  name: datagrid-keystore-volume
                  readOnly: true
                - mountPath: /etc/jgroups-encrypt-secret-volume
                  name: datagrid-jgroups-keystore-volume
                  readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
            - name: datagrid-keystore-volume
              secret:
                secretName: '${HTTPS_SECRET}'
            - name: datagrid-jgroups-keystore-volume
              secret:
                secretName: '${JGROUPS_ENCRYPT_SECRET}'
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}'
            from:
              kind: ImageStreamTag
              name: 'jboss-datagrid73-openshift:1.0'
              namespace: '${IMAGE_STREAM_NAMESPACE}'
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-mysql'
    spec:
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-mysql'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: '${APPLICATION_NAME}'
            deploymentConfig: '${APPLICATION_NAME}-mysql'
          name: '${APPLICATION_NAME}-mysql'
        spec:
          containers:
            - env:
                - name: MYSQL_USER
                  value: '${DB_USERNAME}'
                - name: MYSQL_PASSWORD
                  value: '${DB_PASSWORD}'
                - name: MYSQL_DATABASE
                  value: '${DB_DATABASE}'
                - name: MYSQL_LOWER_CASE_TABLE_NAMES
                  value: '${MYSQL_LOWER_CASE_TABLE_NAMES}'
                - name: MYSQL_MAX_CONNECTIONS
                  value: '${MYSQL_MAX_CONNECTIONS}'
                - name: MYSQL_FT_MIN_WORD_LEN
                  value: '${MYSQL_FT_MIN_WORD_LEN}'
                - name: MYSQL_FT_MAX_WORD_LEN
                  value: '${MYSQL_FT_MAX_WORD_LEN}'
                - name: MYSQL_AIO
                  value: '${MYSQL_AIO}'
              image: mysql
              imagePullPolicy: Always
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 3306
                timeoutSeconds: 1
              name: '${APPLICATION_NAME}-mysql'
              ports:
                - containerPort: 3306
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - >-
                      MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u
                      $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
              volumeMounts:
                - mountPath: /var/lib/mysql/data
                  name: '${APPLICATION_NAME}-mysql-pvol'
          volumes:
            - name: '${APPLICATION_NAME}-mysql-pvol'
              persistentVolumeClaim:
                claimName: '${APPLICATION_NAME}-mysql-claim'
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-mysql'
            from:
              kind: ImageStreamTag
              name: 'mysql:${MYSQL_IMAGE_STREAM_TAG}'
              namespace: '${IMAGE_STREAM_NAMESPACE}'
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: '${APPLICATION_NAME}'
      name: '${APPLICATION_NAME}-mysql-claim'
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${VOLUME_CAPACITY}'
parameters:
  - name: APPLICATION_NAME
    required: true
    value: datagrid-app
  - name: HOSTNAME_HTTP
  - name: HOSTNAME_HTTPS
  - name: USERNAME
  - name: PASSWORD
  - name: ADMIN_GROUP
  - name: HOTROD_AUTHENTICATION
  - name: CONTAINER_SECURITY_ROLE_MAPPER
  - name: CONTAINER_SECURITY_ROLES
  - name: HTTPS_SECRET
    required: true
    value: datagrid-app-secret
  - name: HTTPS_KEYSTORE
    value: keystore.jks
  - name: HTTPS_NAME
  - name: HTTPS_PASSWORD
  - name: DB_JNDI
    value: 'java:/jboss/datasources/mysql'
  - name: DB_DATABASE
    required: true
    value: root
  - from: 'user[a-zA-Z0-9]{3}'
    generate: expression
    name: DB_USERNAME
    required: true
  - from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - name: DB_MIN_POOL_SIZE
  - name: DB_MAX_POOL_SIZE
  - name: DB_TX_ISOLATION
  - name: MYSQL_LOWER_CASE_TABLE_NAMES
  - name: MYSQL_MAX_CONNECTIONS
  - name: MYSQL_FT_MIN_WORD_LEN
  - name: MYSQL_FT_MAX_WORD_LEN
  - name: MYSQL_AIO
  - name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - name: INFINISPAN_CONNECTORS
    value: 'hotrod,memcached,rest'
  - name: CACHE_NAMES
  - name: DATAVIRT_CACHE_NAMES
  - name: CACHE_TYPE_DEFAULT
  - name: ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH
  - name: MEMCACHED_CACHE
    value: default_memcached
  - name: REST_SECURITY_DOMAIN
  - name: JGROUPS_ENCRYPT_SECRET
    value: datagrid-app-secret
  - name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - name: JGROUPS_ENCRYPT_NAME
  - name: JGROUPS_ENCRYPT_PASSWORD
  - from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - name: MYSQL_IMAGE_STREAM_TAG
    required: true
    value: '5.7'
  - name: MEMORY_LIMIT
    value: 1Gi
